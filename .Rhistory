require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
length(unique(three_kp$instance_name))
require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
View(three_kp)
require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
length(unique(three_kp$instance_name))
require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
require(data.table)
#three_kp <- three_kp[three_kp$n_kp == 3,]
#three_kp <- three_kp[three_kp$n_kp == 5,]
#three_kp <- three_kp[three_kp$n_kp == 10,]
#three_kp <- three_kp[three_kp$instance_name %like% 'r_100',]
#three_kp <- three_kp[three_kp $instance_name %like% 'r_200',]
#three_kp <- three_kp[three_kp $instance_name %like% 'r_300',]
three_kp
require(data.table)
files <- list.files(path="test_results", pattern="*.csv", full.names=TRUE, recursive=FALSE)
three_kp <- read.csv(files[1])
for(i in 2:length(files)){
data_file <- read.csv(files[i])
three_kp <- rbind(three_kp, data_file)
}
three_kp$block <- 0
knapsack_count = c(3,5,10)
unique_instances = unique(three_kp$instance_name)
block_count = 3*length(unique_instances)
block_matrix = matrix(1:block_count, nrow =3, ncol=length(unique_instances))
rownames(block_matrix) <- knapsack_count
colnames(block_matrix) <- unique_instances
for (i in 1:nrow(three_kp)){
three_kp[i, "block"] <- block_matrix[toString(three_kp[i,"n_kp"]), three_kp[i,"instance_name"]]
}
require(data.table)
three_kp <- three_kp[three_kp$n_kp == 3,]
#three_kp <- three_kp[three_kp$n_kp == 5,]
#three_kp <- three_kp[three_kp$n_kp == 10,]
#three_kp <- three_kp[three_kp$instance_name %like% 'r_100',]
#three_kp <- three_kp[three_kp $instance_name %like% 'r_200',]
#three_kp <- three_kp[three_kp $instance_name %like% 'r_300',]
three_kp
average_mean_f1 = c(0,0,0,0,0,0,0,0,0)
mut_rates = c(.1,.2,.3,.4,.5,.6,.7,.8,.9)
for (i in 1:9){
average_mean_f1[i] = mean(three_kp[three_kp$mut_rate == mut_rates[i], ][['hypervolume']])
}
plot(mut_rates, average_mean_f1)
average_mean_f1 = c(0,0,0,0)
pop_sizes = c(100,150,200,250)
for (i in 1:4){
average_mean_f1[i] = mean(three_kp[three_kp$pop_size == pop_sizes[i], ][['hypervolume']])
}
plot(pop_sizes, average_mean_f1)
three_kp <- within(three_kp,{
instance_name <-factor(instance_name)
mut_rate <- factor(mut_rate)
pop_size <-factor(pop_size)
n_kp <-factor(n_kp)
block <- factor(block)
})
three_all_mut_hv <-aov(hypervolume~block+mut_rate, data = three_kp)
three_all_pop_hv <-aov(hypervolume~block+pop_size, data = three_kp)
three_all_two_interacting_hv <-aov(hypervolume~block+pop_size*mut_rate, data = three_kp)
print(summary(three_all_mut_hv))
print(summary(three_all_pop_hv))
print(summary(three_all_two_interacting_hv))
tukey.mut_hv<-TukeyHSD(three_all_mut_hv, conf.level = 0.99)
tukey.pop_hv <-TukeyHSD(three_all_pop_hv, conf.level = 0.99)
